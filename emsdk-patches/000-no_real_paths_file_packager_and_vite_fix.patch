diff --git a/./upstream/emscripten/tools/file_packager.py.orig b/./upstream/emscripten/tools/file_packager.py
index 281e636..005353a 100644
--- a/./upstream/emscripten/tools/file_packager.py.orig
+++ b/./upstream/emscripten/tools/file_packager.py
@@ -740,7 +740,7 @@ def generate_js(data_target, data_files, metadata):
             DataRequest.prototype.requests[files[i].filename].onload();
           }'''
       use_data += ("          Module['removeRunDependency']('datafile_%s');\n"
-                   % js_manipulation.escape_for_js_string(data_target))
+                   % js_manipulation.escape_for_js_string(os.path.basename(data_target)))
 
     else:
       # LZ4FS usage
@@ -753,7 +753,7 @@ def generate_js(data_target, data_files, metadata):
             compressedData['data'] = byteArray;
             assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');
             Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, %s);
-            Module['removeRunDependency']('datafile_%s');''' % (meta, "true" if options.use_preload_plugins else "false", js_manipulation.escape_for_js_string(data_target))
+            Module['removeRunDependency']('datafile_%s');''' % (meta, "true" if options.use_preload_plugins else "false", js_manipulation.escape_for_js_string(os.path.basename(data_target)))
 
     package_name = data_target
     remote_package_size = os.path.getsize(package_name)
@@ -767,8 +767,7 @@ def generate_js(data_target, data_files, metadata):
         PACKAGE_PATH = encodeURIComponent(location.pathname.substring(0, location.pathname.lastIndexOf('/')) + '/');
       }
       var PACKAGE_NAME = '%s';
-      var REMOTE_PACKAGE_BASE = '%s';
-      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\n''' % (js_manipulation.escape_for_js_string(data_target), js_manipulation.escape_for_js_string(remote_package_name))
+      var REMOTE_PACKAGE_NAME = new URL('./%s', import.meta.url).href;\n''' % (js_manipulation.escape_for_js_string(remote_package_name), js_manipulation.escape_for_js_string(remote_package_name))
     metadata['remote_package_size'] = remote_package_size
     ret += '''var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n'''
 
@@ -1116,7 +1115,7 @@ def generate_js(data_target, data_files, metadata):
 
   function runMetaWithFS() {
     Module['addRunDependency']('%(metadata_file)s');
-    var metadataUrl = Module['locateFile'] ? Module['locateFile']('%(metadata_file)s', '') : '%(metadata_file)s';
+    var metadataUrl = new URL('./%(metadata_file)s', import.meta.url).href;
     %(node_support_code)s
     fetch(metadataUrl)
       .then((response) => {
